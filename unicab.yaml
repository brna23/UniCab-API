openapi: 3.0.0
info:
  title: UniCab API
  version: 1.0.0
paths:
  /api/rides:
    get:
      summary: Elenco viaggi disponibili
      description: Restituisce una lista di viaggi con filtri opzionali
      tags:
        - Rides
      parameters:
        - in: query
          name: from
          schema:
            type: string
          description: Filtro per indirizzo di partenza
        - in: query
          name: to
          schema:
            type: string
          description: Filtro per indirizzo di destinazione
        - in: query
          name: date
          schema:
            type: string
            format: date
          description: Filtro per data (YYYY-MM-DD)
        - in: query
          name: seats
          schema:
            type: integer
          description: Filtro per posti disponibili minimi
        - in: query
          name: sortBy
          schema:
            type: string
            enum:
              - 'departureTime:asc'
              - 'departureTime:desc'
              - 'price:asc'
              - 'price:desc'
          description: Ordinamento risultati
      responses:
        '200':
          description: Lista di viaggi con o senza parametri di ricerca
        '500':
          description: Errore server
    post:
      summary: Crea un nuovo viaggio
      description: Permette a un driver autenticato di creare un nuovo viaggio
      tags:
        - Rides
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - startAddress
                - endAddress
                - departureTime
                - availableSeats
                - price
              properties:
                startAddress:
                  type: string
                  example: 'Piazza Duomo, Milano'
                  description: Indirizzo di partenza
                endAddress:
                  type: string
                  example: 'Stazione Centrale, Milano'
                  description: Indirizzo di destinazione
                departureTime:
                  type: string
                  format: date-time
                  example: '2023-12-15T08:00:00Z'
                  description: Data e ora di partenza (ISO 8601)
                availableSeats:
                  type: integer
                  minimum: 1
                  example: 3
                  description: Numero di posti disponibili
                price:
                  type: number
                  minimum: 0
                  example: 15.5
                  description: Prezzo per passeggero
                additionalInfo:
                  type: string
                  example: Bagaglio massimo 10kg
                  description: Informazioni aggiuntive
      responses:
        '201':
          description: Viaggio creato con successo
        '400':
          description: Richiesta non valida
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Campi obbligatori mancanti
                  details:
                    type: object
        '401':
          description: Non autenticato
        '403':
          description: Autorizzazione negata (solo per driver)
        '500':
          description: Errore server
  '/api/rides/{id}':
    get:
      summary: Dettaglio viaggio
      description: Restituisce i dettagli di un singolo viaggio
      tags:
        - Rides
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID del viaggio
      responses:
        '200':
          description: Dettaglio viaggio
        '404':
          description: Viaggio non trovato
        '500':
          description: Errore server
    put:
      summary: Aggiorna un viaggio
      description: Permette al driver di modificare i dettagli del viaggio
      tags:
        - Rides
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID del viaggio
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                startAddress:
                  type: string
                endAddress:
                  type: string
                departureTime:
                  type: string
                  format: date-time
                availableSeats:
                  type: integer
                price:
                  type: number
                status:
                  type: string
                  enum:
                    - pending
                    - active
                    - completed
                    - cancelled
      responses:
        '200':
          description: Viaggio aggiornato
        '400':
          description: Richiesta non valida
        '403':
          description: Non autorizzato (solo il driver può modificare)
        '404':
          description: Viaggio non trovato
        '500':
          description: Errore server
    delete:
      summary: Cancella un viaggio
      description: Permette al driver di cancellare un viaggio
      tags:
        - Rides
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID del viaggio
      responses:
        '200':
          description: Viaggio cancellato con successo
        '400':
          description: Richiesta non valida
        '403':
          description: Non autorizzato (solo il driver può cancellare)
        '404':
          description: Viaggio non trovato
        '500':
          description: Errore server
  '/api/bookings/{id}/book':
    post:
      summary: Prenota una corsa (singola o multipla)
      tags:
        - Bookings
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Ride ID
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                seats:
                  type: integer
                  example: 3
                participants:
                  type: array
                  items:
                    type: string
                  example:
                    - 665f2b3e84a7ab001223a123
                    - 665f2b3e84a7ab001223a456
      responses:
        '201':
          description: Booking created
        '400':
          description: Invalid input or full
  '/api/bookings/{id}/confirm':
    post:
      summary: Conferma prenotazione a cui sei stato invitato
      tags:
        - Bookings
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Ride ID
      responses:
        '200':
          description: Confirmation successful
        '403':
          description: You were not invited
  /api/auth/register:
    post:
      summary: Registra un nuovo utente
      description: Crea un nuovo account utente se lo username non è già in uso.
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  example: utente123
                password:
                  type: string
                  example: PasswordSicura123
      responses:
        '201':
          description: Registrazione completata
        '400':
          description: Username già esistente
        '500':
          description: Errore nel server
  /api/auth/login:
    post:
      summary: Effettua il login di un utente
      description: >-
        Verifica le credenziali e restituisce un token JWT se l'autenticazione
        ha successo.
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  example: utente123
                password:
                  type: string
                  example: PasswordSicura123
      responses:
        '200':
          description: 'Login effettuato con successo, ritorna un token JWT'
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6...
        '400':
          description: Credenziali errate
        '500':
          description: Errore nel server
components: {}
tags: []
